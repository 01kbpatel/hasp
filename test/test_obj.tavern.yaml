# test_page.tavern.yaml
---
test_name: Obj Standard Properties

includes:
  - !include config.yaml

paho-mqtt:
  client:
    transport: tcp
    client_id: tavern-tester
  connect:
    host: "{host}"
    port: !int "{port:d}"
    timeout: 3

marks:
  - parametrize:
      key:
        - hidden
        - hidden_inv
        - x
        - y
        - w
        - h
        - radius
        - opacity
      vals:
        - [1, 0, 120, 121, 122, 123, 0, 255]
        - [0, 1, 80, 81, 82, 83, 32535, 192]
        - [1, 0, -10, -10, 256, 257, 1, 64]
        - [0, 1, 1024, 1025, 1026, 1027, 5, 0]
  - parametrize:
      key: objid
      vals:
        - 10
        - 12


stages:
  - name: Page 1
    mqtt_publish:
      topic: hasp/{plate}/command
      payload: "page 1"
    mqtt_response:
      topic: hasp/{plate}/state/page
      payload: "1"
      timeout: 1
    delay_after: 0

  - name: Clear page
    mqtt_publish:
      topic: hasp/{plate}/command/clearpage
      payload: ""
    delay_after: 0

  - name: Create object
    mqtt_publish:
      topic: hasp/{plate}/command/jsonl
      json:
        objid: "{objid}"
        id: 1
    delay_after: 0

  - name: Test x
    mqtt_publish:
      topic: hasp/{plate}/command/json
      payload: '["p[1].b[1].x={x}","p[1].b[1].x"]'
    mqtt_response:
      topic: hasp/{plate}/state/p1b1
      json:
        x: !int "{x:d}"
      timeout: 1

  - name: Test y
    mqtt_publish:
      topic: hasp/{plate}/command/json
      payload: '["p[1].b[1].y={y}","p[1].b[1].y"]'
    mqtt_response:
      topic: hasp/{plate}/state/p1b1
      json:
        y: !int "{y:d}"
      timeout: 1

  - name: Test w
    mqtt_publish:
      topic: hasp/{plate}/command/json
      payload: '["p[1].b[1].w={w}","p[1].b[1].w"]'
    mqtt_response:
      topic: hasp/{plate}/state/p1b1
      json:
        w: !int "{w:d}"
      timeout: 1

  - name: Test h
    mqtt_publish:
      topic: hasp/{plate}/command/json
      payload: '["p[1].b[1].h={h}","p[1].b[1].h"]'
    delay_after: 0
    mqtt_response:
      topic: hasp/{plate}/state/p1b1
      json:
        h: !int "{h:d}"
      timeout: 1

  - name: Test enabled
    mqtt_publish:
      topic: hasp/{plate}/command/json
      payload: '["p[1].b[1].enabled={hidden}","p[1].b[1].enabled"]'
    delay_after: 0
    mqtt_response:
      topic: hasp/{plate}/state/p1b1
      json:
        enabled: !int "{hidden:d}"
      timeout: 1

  - name: Set vis
    mqtt_publish:
      topic: hasp/{plate}/command
      payload: "p[1].b[1].vis={hidden}"
    delay_after: 0
  - name: Get hidden
    mqtt_publish:
      topic: hasp/{plate}/command
      payload: "p[1].b[1].hidden"
    mqtt_response:
      topic: hasp/{plate}/state/p1b1
      json:
        hidden: !int "{hidden_inv:d}"
      timeout: 1
  - name: Get vis
    mqtt_publish:
      topic: hasp/{plate}/command
      payload: "p[1].b[1].vis"
    mqtt_response:
      topic: hasp/{plate}/state/p1b1
      json:
        vis: !int "{hidden:d}"
      timeout: 1

  - name: Set hidden
    mqtt_publish:
      topic: hasp/{plate}/command
      payload: "p[1].b[1].hidden={hidden}"
    delay_after: 0
  - name: Get hidden
    mqtt_publish:
      topic: hasp/{plate}/command
      payload: "p[1].b[1].hidden"
    mqtt_response:
      topic: hasp/{plate}/state/p1b1
      json:
        hidden: !int "{hidden:d}"
      timeout: 1

  - name: Get vis
    mqtt_publish:
      topic: hasp/{plate}/command
      payload: "p[1].b[1].vis"
    mqtt_response:
      topic: hasp/{plate}/state/p1b1
      json:
        vis: !int "{hidden_inv:d}"
      timeout: 1

  - name: Test opacity
    mqtt_publish:
      topic: hasp/{plate}/command/json
      payload: '["p[1].b[1].opacity={opacity}","p[1].b[1].opacity"]'
    mqtt_response:
      topic: hasp/{plate}/state/p1b1
      json:
        opacity: !int "{opacity:d}"
      timeout: 1

  - name: Test radius
    mqtt_publish:
      topic: hasp/{plate}/command/json
      payload: '["p[1].b[1].radius={radius}","p[1].b[1].radius"]'
    mqtt_response:
      topic: hasp/{plate}/state/p1b1
      json:
        radius: !int "{radius:d}"
      timeout: 1
